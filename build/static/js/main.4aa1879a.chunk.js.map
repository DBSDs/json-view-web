{"version":3,"sources":["mock-data.js","index.jsx"],"names":["data","Page","this","inputChangeHanlder","JSON","stringify","className","href","id","placeholder","onKeyUp","$event","target","value","outputChangeHandler","document","querySelector","innerHTML","JSONFormat","toString","querySelectorAll","forEach","item","that","addEventListener","hide","err","text","replace","e","_toString","Object","prototype","_bigNums","format","object","indent_count","html_fragment","tf","ts","call","_typeof","_format_boolean","_format_number","isNaN","length","inArray","search","_format_string","tmp_array","i","size","push","indent_tab","join","_format_array","key","_format_object","Array","style","createElement","type","code","slice","apply","arguments","appendChild","createTextNode","ex","styleSheet","cssText","getElementsByTagName","loadCssString","origin_data","m","check_data","bigNum_regex","exec","parse","obj","data_type","parentNode","getAttribute","data_size","display","span","before","onclick","show","nextSibling","remove","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4aa1879a.chunk.js","sourcesContent":["export const data = [{\r\n    \"Json解析\": \"支持格式化高亮折叠\",\r\n    \"支持XML转换\": \"支持XML转换Json,Json转XML\",\r\n    \"Json格式验证\": \"更详细准确的错误信息\"\r\n}, {\r\n    \"status\": \"0\",\r\n    \"result\": [{\r\n            \"productId\": \"10001\",\r\n            \"productName\": \"小米6\",\r\n            \"prodcutPrice\": \"2499\",\r\n            \"prodcutImg\": \"mi6.jpg\"\r\n\r\n        },\r\n        {\r\n            \"productId\": \"10002\",\r\n            \"productName\": \"小米笔记本\",\r\n            \"prodcutPrice\": \"3999\",\r\n            \"prodcutImg\": \"note.jpg\"\r\n        }\r\n    ]\r\n}]","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport  { data } from \"./mock-data.js\";\r\nimport \"./index.css\";\r\nimport \"./font/iconfont.css\"\r\n\r\nclass Page extends React.Component {\r\n  componentDidMount() {\r\n  this.inputChangeHanlder(JSON.stringify(data))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"top-line\">\r\n          <div className=\"top-line-left\">\r\n            <div className=\"top-line-by\">Createby</div>\r\n            <a className=\"top-line-name\" href=\"true\">\r\n              <span className=\"-css\">op-chen</span>\r\n            </a>\r\n          </div>\r\n          <a className=\"top-line-right\" href=\"true\">\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <textarea\r\n            id=\"json-src\"\r\n            className=\"content-left\"\r\n            placeholder=\"在此输入Json字符串...\"\r\n            onKeyUp={($event) => this.inputChangeHanlder($event.target.value)}\r\n          >{ JSON.stringify(data)}</textarea>\r\n          <div\r\n            className=\"content-right\"\r\n            onKeyUp={() => this.outputChangeHandler()}\r\n          >\r\n            <div className=\"ro\" id=\"json-target\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * JSON-#Src输入\r\n   */\r\n  inputChangeHanlder(value) {\r\n    try {\r\n      document.querySelector(\"#json-target\").innerHTML = this.JSONFormat(\r\n        value\r\n      ).toString();\r\n      document.querySelectorAll(\".icon-zhedie1\").forEach((item) => {\r\n        const that = this;\r\n        item.addEventListener(\"click\", function () {\r\n          that.hide(item);\r\n        });\r\n      });\r\n    } catch (err) {\r\n      document.querySelector(\"#json-target\").innerHTML = err + \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * JSON-#Target修改\r\n   */\r\n  outputChangeHandler() {\r\n    let text = document\r\n      .querySelector(\"#json-target\")\r\n      .innerHTML.replace(/<br\\/>/g, \"\\n\")\r\n      .replace(/<br>/g, \"\\n\")\r\n      .replace(/<[^>]+>/g, \"\")\r\n      .replace(/&nbsp;/gi, \" \")\r\n      .replace(/Object{...}/gi, \"\")\r\n      .replace(/Array\\[[0-9]+\\]/gi, \"\");\r\n    document.querySelector(\"#json-src\").value = text;\r\n  }\r\n\r\n  /**\r\n   * JSON解析\r\n   */\r\n  JSONFormat(e) {\r\n    let _toString = Object.prototype.toString; // 类型判断式\r\n    let _bigNums = [];\r\n    /**\r\n     * 根据JSON类型赋值\r\n     */\r\n    function format(object, indent_count) {\r\n      let html_fragment = \"\";\r\n      switch (_typeof(object)) {\r\n        case \"Null\":\r\n          html_fragment = _format_null(object);\r\n          break;\r\n        case \"Boolean\":\r\n          html_fragment = _format_boolean(object);\r\n          break;\r\n        case \"Number\":\r\n          html_fragment = _format_number(object);\r\n          break;\r\n        case \"String\":\r\n          html_fragment = _format_string(object);\r\n          break;\r\n        case \"Array\":\r\n          html_fragment = _format_array(object, indent_count);\r\n          break;\r\n        case \"Object\":\r\n          html_fragment = _format_object(object, indent_count);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return html_fragment;\r\n    }\r\n    // null类型\r\n    function _format_null(object) {\r\n      return '<span class=\"json_null\" contenteditable=\"true\">null</span>';\r\n    }\r\n    // 布尔值类型\r\n    function _format_boolean(object) {\r\n      return (\r\n        '<span class=\"json_boolean\" contenteditable=\"true\">' +\r\n        object +\r\n        \"</span>\"\r\n      );\r\n    }\r\n    // 数字类型\r\n    function _format_number(object) {\r\n      return (\r\n        '<span class=\"json_number\" contenteditable=\"true\">' + object + \"</span>\"\r\n      );\r\n    }\r\n    // 字符串类型\r\n    function _format_string(object) {\r\n      if (\r\n        !isNaN(object) &&\r\n        object.length >= 15 &&\r\n        document.querySelectorAll.inArray(object, _bigNums) > -1\r\n      ) {\r\n        return _format_number(object);\r\n      }\r\n      object = object.replace(/</g, \"&lt;\");\r\n      object = object.replace(/>/g, \"&gt;\");\r\n      if (0 <= object.search(/^http/)) {\r\n        object =\r\n          '<a href=\"' +\r\n          object +\r\n          '\" target=\"_blank\" class=\"json_link\" >' +\r\n          object +\r\n          \"</a>\";\r\n      }\r\n      return (\r\n        '<span class=\"json_string\" contenteditable=\"true\">\"' +\r\n        object +\r\n        '\"</span>'\r\n      );\r\n    }\r\n    // 数组类型\r\n    function _format_array(object, indent_count) {\r\n      let tmp_array = [];\r\n      for (let i = 0, size = object.length; i < size; ++i) {\r\n        tmp_array.push(\r\n          indent_tab(indent_count) + format(object[i], indent_count + 1)\r\n        );\r\n      }\r\n      return (\r\n        '<span data-type=\"array\" data-size=\"' +\r\n        tmp_array.length +\r\n        '\" ><i  style=\"cursor:pointer;\" class=\"iconfont icon-zhedie1\"></i>[<br/>' +\r\n        tmp_array.join(\",<br/>\") +\r\n        \"<br/>\" +\r\n        indent_tab(indent_count - 1) +\r\n        \"]</span>\"\r\n      );\r\n    }\r\n    // 对象类型\r\n    function _format_object(object, indent_count) {\r\n      let tmp_array = [];\r\n      for (let key in object) {\r\n        tmp_array.push(\r\n          indent_tab(indent_count) +\r\n            '<span class=\"json_key\" contenteditable=\"true\">\"' +\r\n            key +\r\n            '\"</span>:' +\r\n            format(object[key], indent_count + 1)\r\n        );\r\n      }\r\n      return (\r\n        '<span data-type=\"object contenteditable=\"true\"\"><i  style=\"cursor:pointer;\" class=\"iconfont icon-zhedie1\"></i>{<br/>' +\r\n        tmp_array.join(\",<br/>\") +\r\n        \"<br/>\" +\r\n        indent_tab(indent_count - 1) +\r\n        \"}</span>\"\r\n      );\r\n    }\r\n    // 返回缩进TAB\r\n    function indent_tab(indent_count) {\r\n      return new Array(indent_count + 1).join(\"&nbsp;&nbsp;&nbsp;&nbsp;\");\r\n    }\r\n\r\n    /**\r\n     * 判断JSON类型方法\r\n     */\r\n    function _typeof(object) {\r\n      let tf = typeof object,\r\n        ts = _toString.call(object);\r\n\r\n      return null === object\r\n        ? \"Null\"\r\n        : \"undefined\" === tf\r\n        ? \"Undefined\"\r\n        : \"boolean\" === tf\r\n        ? \"Boolean\"\r\n        : \"number\" === tf\r\n        ? \"Number\"\r\n        : \"string\" === tf\r\n        ? \"String\"\r\n        : \"[object Function]\" === ts\r\n        ? \"Function\"\r\n        : \"[object Array]\" === ts\r\n        ? \"Array\"\r\n        : \"[object Date]\" === ts\r\n        ? \"Date\"\r\n        : \"Object\";\r\n    }\r\n\r\n    /**\r\n     * 为节点赋值Css类\r\n     */\r\n    function loadCssString() {\r\n      let style = document.createElement(\"style\");\r\n      style.type = \"text/css\";\r\n      let code = Array.prototype.slice.apply(arguments).join(\"\");\r\n      try {\r\n        style.appendChild(document.createTextNode(code));\r\n      } catch (ex) {\r\n        style.styleSheet.cssText = code;\r\n      }\r\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\r\n    }\r\n\r\n    loadCssString(\r\n      \".json_key{ color: #92278f;font-weight:bold;}\",\r\n      \".json_null{color: #f1592a;font-weight:bold;}\",\r\n      \".json_string{ color: #3ab54a;font-weight:bold;}\",\r\n      \".json_number{ color: #25aae2;font-weight:bold;}\",\r\n      \".json_boolean{ color: #f98280;font-weight:bold;}\",\r\n      \".json_link{ color: #61D2D6;font-weight:bold;}\",\r\n      \".json_array_brackets{}\"\r\n    );\r\n\r\n    /**\r\n     * 入口类\r\n     * */\r\n    class _JSONFormat {\r\n      constructor(origin_data) {\r\n        _bigNums = [];\r\n        let check_data = origin_data.replace(/\\s/g, \"\");\r\n        let bigNum_regex = /[^\\\\][\"]([[:]){1}(\\d{16,})([,}]])/g;\r\n        let m;\r\n        do {\r\n          m = bigNum_regex.exec(check_data);\r\n          if (m) {\r\n            _bigNums.push(m[2]);\r\n            origin_data = origin_data.replace(\r\n              /([[:])?(\\d{16,})\\s*([,}]])/,\r\n              '$1\"$2\"$3'\r\n            );\r\n          }\r\n        } while (m);\r\n        this.data = JSON.parse(origin_data);\r\n      }\r\n      toString() {\r\n        return format(this.data, 1);\r\n      }\r\n    }\r\n\r\n    return new _JSONFormat(e);\r\n  }\r\n\r\n  /**\r\n   * 点击图标隐藏事件\r\n   */\r\n  hide(obj) {\r\n    let data_type = obj.parentNode.getAttribute(\"data-type\") || [];\r\n    let data_size = obj.parentNode.getAttribute(\"data-size\") || [];\r\n    obj.parentNode.style.display = \"none\";\r\n    let span = document.createElement(\"span\");\r\n    span.className = \"custom-plus\";\r\n    if (data_type === \"array\") {\r\n      span.innerHTML =\r\n        '<i  style=\"cursor:pointer;\" class=\"plus iconfont icon-zhedie\"></i>Array[<span class=\"json_number\">' +\r\n        data_size +\r\n        \"</span>]\";\r\n      obj.parentNode.before(span);\r\n    } else {\r\n      span.innerHTML =\r\n        '<i  style=\"cursor:pointer;\" class=\"plus iconfont icon-zhedie\"></i>Object{...}';\r\n      obj.parentNode.before(span);\r\n    }\r\n    const that = this;\r\n    span.onclick = function () {\r\n      that.show(span);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 点击图标展开事件\r\n   */\r\n  show(obj) {\r\n    obj.nextSibling.style.display = \"inline\";\r\n    obj.remove();\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Page />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}